@model BeatLab.Models.Entities.User

@{
    @Styles.Render("~/Content/StylePage/AccountStyle.css")
    ViewBag.Title = "Личный кабинет";
}


<div>

    <section class="u-clearfix u-section-1" id="sec-0205">
        <div class="u-clearfix u-sheet u-sheet-1">
            <div class="u-clearfix u-expanded-width u-gutter-0 u-layout-spacing-vertical u-layout-wrap u-layout-wrap-1">
                <div class="u-layout">
                    <div class="u-layout-row">
                        <div class="u-align-left u-container-style u-layout-cell u-left-cell u-size-40 u-layout-cell-1">
                            <div class="u-container-layout u-container-layout-1">
                                <h2 class="u-text u-text-default u-text-1">@Html.DisplayFor(model => model.Nickname_User)</h2>
                                <p class="u-text u-text-2"> @Html.DisplayFor(model => model.Description_User)</p>
                            </div>
                        </div>
                        <div class="u-container-style u-image u-layout-cell u-right-cell u-size-20 "
                             src="" data-image-width="256" data-image-height="256">
                            @{
                                if (Model.Image_User == null)
                                {

                                    <img style="min-height: 409px; background-position: 50% 50%; " src="~/Resource/user.png" />
                                }
                                else
                                {
                                    @Html.Raw("<img style='width:80px; height:60px; min-height: 409px; min-width:409px; background-position: 50% 50%' src=\"data:image/jpeg;base64,"
                                               + Convert.ToBase64String(Model.Image_User) + "\" />")
                                }
                            }
                            <div class="u-container-layout u-container-layout-2"></div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
    <section class="u-align-center u-clearfix u-section-2" id="sec-2942">
        <div class="u-clearfix u-sheet u-valign-middle u-sheet-1">
            <div class="u-expanded-width u-list u-list-1">
                <div class="u-repeater u-repeater-1">
                    <div class="u-align-center u-container-style u-custom-item u-list-item u-repeater-item u-list-item-1">
                        <div class="u-container-layout u-similar-container u-valign-top u-container-layout-1">
                            <span class="u-file-icon u-icon u-icon-1"><img src="~/Resource/1828439.png" alt=""></span>
                            <h3 class="u-text u-text-1">ФИО</h3>
                            <p class="u-text u-text-2">@Html.DisplayFor(model => model.Last_Name_User) @Html.DisplayFor(model => model.First_Name_User) @Html.DisplayFor(model => model.Middle_Name_User) </p>
                        </div>
                    </div>
                    <div class="u-align-center u-container-style u-custom-item u-grey-60 u-list-item u-repeater-item u-list-item-2">
                        <div class="u-container-layout u-similar-container u-valign-top u-container-layout-2">
                            <span class="u-file-icon u-icon u-icon-2"><img src="~/Resource/646094.png" alt=""></span>
                            <h3 class="u-text u-text-3">Почта</h3>
                            <p class="u-text u-text-4">@Html.DisplayFor(model => model.Email_User)</p>
                        </div>
                    </div>
                    <div class="u-align-center u-container-style u-custom-item u-list-item u-repeater-item u-list-item-3">
                        <div class="u-container-layout u-similar-container u-valign-top u-container-layout-3">
                            <span class="u-file-icon u-icon u-icon-3"><img src="~/Resource/4753121.png" alt=""></span>
                            <h3 class="u-text u-text-5">Возраст</h3>
                            <p class="u-text u-text-6">@Html.DisplayFor(model => model.Age_User)</p>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
    @if (HttpContext.Current.Request.QueryString["login"] == HttpContext.Current.User.Identity.Name || HttpContext.Current.Request.QueryString["login"] == null)
    {
        <section class="u-clearfix u-section-3" id="sec-fde9">
            <div class="u-clearfix u-sheet u-sheet-1">
                <div class="u-align-left u-expanded-width u-left-0 u-palette-1-base u-shape u-shape-rectangle u-shape-1"></div>
                <div class="u-clearfix u-layout-wrap u-layout-wrap-1">
                    <div class="u-layout">
                        <div class="u-layout-row">
                            <div class="u-align-center-sm u-align-center-xs u-align-left-lg u-align-left-md u-align-left-xl u-container-style u-layout-cell u-left-cell u-size-43 u-layout-cell-1">
                                <div class="u-container-layout u-valign-middle u-container-layout-1">
                                    <h3 class="u-text u-text-default u-text-1">Редактировать страницу</h3>
                                    <p class="u-text u-text-2">Необходимые параметры можно изменить, нажав на данную кнопку.</p>
                                </div>
                            </div>
                            <div class="u-align-left u-container-style u-layout-cell u-right-cell u-size-17 u-layout-cell-2">
                                <div class="u-container-layout u-valign-middle u-container-layout-2">
                                    @Html.ActionLink("Изменить данные", "Edit", new { id = Model.ID_User }, new { @class = "u-black u-btn u-button-style u-btn-1" })
                                </div>
                            </div>
                        </div>
                    </div>

                </div>

                @Html.ActionLink("Добавить бит или семпл", "Create", "Musics", new { id = Model.ID_User }, new { @class = "u-black u-btn u-button-style " })
            </div>

        </section>

        <h4>Мои музыкальные товары:</h4>
        <div style="display:flex; flex-wrap: wrap;">


            @foreach (var item in Model.Music.ToList().Where(m => !m.IsDeleted))
            {
                <div style="grid-template-rows: 70% 30%; margin: 2em;">
                    <div style="position:relative;">
                        @{ if (item.Image_music == null)
                            {
                                <img id='previewImage' class="imgactive" style='width:150px; height:150px;' src="~/Resource/user.png" />
                            }
                            else
                            {
                                @Html.Raw("<img id='previewImage' class='imgactive' style='width:150px; height:150px;' src=\"data:image/jpeg;base64,"
               + Convert.ToBase64String(item.Image_music) + "\" />")
                                @Html.ValidationMessageFor(modelItem => item.Image_music, "", new { @class = "text-danger" })
                            }
                        }
                        <audio id="player">
                            <source src="@Url.Action("LoadAudio", "Musics", new { musicId = item.ID_Music })" type="audio/mp3" />
                        </audio>
                    </div>
                    <div class="rndclss" style="background-color: lightgray; width: 150px; height:60px; text-align:center;">
                        <div>
                            @Html.ActionLink(item.Name_music, "Details", new { id = item.ID_Music }, new { @class = "namesongforplayer" })
                        </div>
                        <div>
                            @Html.ActionLink(@"от " + item.User.Nickname_User, "Details", new { id = item.ID_Music }, new { @class = "nameartistforlayer" })
                        </div>
                        <div>
                            @Html.ActionLink(@"Жанр: " + item.Genere_Of_Music.Name_Gener_of_music, "GenereOfMusic", new { id = item.ID_Music }, new { @class = "nameagenereforsong" })
                        </div>
                    </div>
                    @if (item.Order_Music.Count == 0)
                    {
                        @Html.ActionLink("Изменить", "Edit", "Musics", new { id = item.ID_Music }, new { @class = "u-black u-btn u-button-style" })
                        @Html.ActionLink("Удалить", "Delete", "Musics", new { id = item.ID_Music }, new { @class = "u-black u-btn u-button-style" })
                    }
                </div>
            }
        </div>
        @Html.ActionLink("Добавить плагин", "Create", "Plugins", new { id = Model.ID_User }, new { @class = "u-black u-btn u-button-style " })

        <h4>Мои плагины:</h4>

        <div>




            <div style="display:flex; flex-wrap: wrap;">


                @foreach (var item in Model.Plugins.ToList().Where(m => !m.IsDeleted))
                {
                    <div style="grid-template-rows: 70% 30%; margin: 2em;">
                        <div style="position:relative;">

                            @{ if (item.Image_Plugin == null)
                                {
                                    <img id='previewImage' class="imgactive" style='width:150px; height:150px;' src="~/Resource/user.png" />
                                }
                                else
                                {
                                    @Html.Raw("<img id='previewImage' class='imgactive' style='width:150px; height:150px;' src=\"data:image/jpeg;base64,"
                                                                         + Convert.ToBase64String(item.Image_Plugin) + "\" />")
                                    @Html.ValidationMessageFor(modelItem => item.Image_Plugin, "", new { @class = "text-danger" })
                                }
                            }
                        </div>
                        <div class="rndclss" style="background-color: lightgray; width: 150px; height:60px; text-align:center;">
                            <div>
                                @Html.ActionLink(item.Name_Plugin, "Details", new { id = item.ID_Plugin }, new { @class = "namesongforplayer" })
                            </div>
                            <div>
                                @Html.ActionLink(@"от " + item.User.Nickname_User, "Details", new { id = item.ID_Plugin }, new { @class = "nameartistforlayer" })
                            </div>
                            <div>
                                @Html.ActionLink(@"Жанр: " + item.Format_Plugin.Name_Format_Plugin, "GenereOfMusic", new { id = item.ID_Plugin }, new { @class = "nameagenereforsong" })
                            </div>
                        </div>
                        @if (item.Order_Plugin.Count == 0)
                        {
                            @Html.ActionLink("Изменить", "Edit", "Plugins", new { id = item.ID_Plugin }, new { @class = "u-black u-btn u-button-style " })
                            @Html.ActionLink("Удалить", "Delete", "Plugins", new { id = item.ID_Plugin }, new { @class = "u-black u-btn u-button-style " })
                        }
                    </div>
                }
            </div>



        </div>



        <h4>Купленные музыкальные товары:</h4>
        <div style="display:flex; flex-wrap: wrap;">

            @foreach (var music in Model.Order_Music.Select(o => o.Music).ToList().Where(m => !m.IsDeleted))
            {
                <div style="grid-template-rows: 70% 30%; margin: 2em;">
                    <div style="position:relative;">
                        <img id="previewImage"
                             class="imgactive"
                             style="width:150px; height:150px;"
                             src="data:image/jpeg;base64,@if (music.Image_music == null)
                        {
                             @(Convert.ToBase64String(File.ReadAllBytes(Server.MapPath("~/Resource/239612-1.jpg"))))
                        }
                        else
                        {
                            @(Convert.ToBase64String(music.Image_music))
                        }
                        " />
                    </div>
                    <div class="rndclss" style="background-color: lightgray; width: 150px; height:80px; text-align:center;">
                        <div>
                            <a class="namesongforplayer">@music.Name_music</a>
                        </div>
                        <div>
                            <a class="nameartistforlayer">от: @music.User.Login</a>
                        </div>
                        <div>
                            <a class="nameagenereforsong">Жанр: @music.Genere_Of_Music.Name_Gener_of_music</a>
                        </div>

                        <div>
                            @Html.ActionLink("Скачать", "DownloadSong", "Musics", new { musicId = music.ID_Music }, new { @class = "u-black u-btn u-button-style" })
                        </div>
                    </div>
                </div>
            }
        </div>
        <br />
        <br />
        <br />

        <h4>Купленные плагины:</h4>

        <div style="display:flex; flex-wrap: wrap;">

            @foreach (var plugin in Model.Order_Plugin.Select(o => o.Plugins).ToList().Where(m => !m.IsDeleted))
            {
                <div style="grid-template-rows: 70% 30%; margin: 2em;">
                    <div style="position:relative;">
                        <img id="previewImage"
                             class="imgactive"
                             style="width:150px; height:150px;"
                             src="data:image/jpeg;base64,@if (plugin.Image_Plugin == null)
                        {
                             @(Convert.ToBase64String(File.ReadAllBytes(Server.MapPath("~/Resource/239612-1.jpg"))))
                        }
                        else
                        {
                            @(Convert.ToBase64String(plugin.Image_Plugin))
                        }
                        " />
                    </div>
                    <div class="rndclss" style="background-color: lightgray; width: 150px; height:40px; text-align:center;">
                        <div>
                            <a class="namesongforplayer">@plugin.Format_Plugin.Name_Format_Plugin @plugin.Name_Plugin</a>
                        </div>
                        <div>
                            <a class="nameartistforlayer">от: @plugin.User.Login</a>
                        </div>

                        <div>
                            @Html.ActionLink("Скачать", "DownloadPlugin", "Plugins", new { pluginId = plugin.ID_Plugin }, new { @class = "u-black u-btn u-button-style" })
                        </div>
                    </div>
                </div>
            }
        </div>
        <br />
        <br />
        <br />
        @Html.ActionLink("Добавить альбом", "Create", "Alboms", new { id = Model.ID_User }, new { @class = "u-black u-btn u-button-style " })
        <h4>Мои альбомы:</h4>
        <div style="display:flex; flex-wrap: wrap;">


            @foreach (var item in Model.Alboms.ToList())
            {
                <div style="grid-template-rows: 70% 30%; margin: 2em;">
                    <div style="position:relative;">

                        @{ if (item.Image_Album == null)
                            {
                                <img id='previewImage' class="imgactive" style='width:150px; height:150px;' src="~/Resource/user.png" />
                            }
                            else
                            {
                                @Html.Raw("<img id='previewImage' class='imgactive' style='width:150px; height:150px;' src=\"data:image/jpeg;base64,"
                                                                     + Convert.ToBase64String(item.Image_Album) + "\" />")
                                @Html.ValidationMessageFor(modelItem => item.Image_Album, "", new { @class = "text-danger" })
                            }
                        }
                    </div>
                    <div class="rndclss" style="background-color: lightgray; width: 150px; height:60px; text-align:center;">
                        <div>
                            @Html.ActionLink(@"Название: " + item.Name_Album, "Details", new { id = item.ID_Album }, new { @class = "namesongforplayer" })
                        </div>
                        <div>
                            @Html.ActionLink(@"Тип: " + item.Type_Alboms.Name_Type_Alboms, "Details", new { id = item.ID_Album }, new { @class = "nameartistforlayer" })
                        </div>

                    </div>

                    @Html.ActionLink("Изменить", "Edit", "Alboms", new { id = item.ID_Album }, new { @class = "u-black u-btn u-button-style " })
                    @Html.ActionLink("Удалить", "Delete", "Alboms", new { id = item.ID_Album }, new { @class = "u-black u-btn u-button-style " })

                </div>
            }
        </div>
    }
</div>
<br />
<br />
<div>
    @Html.ActionLink("Удалить аккаунт", "Delete", new { id = Model.ID_User }, new { @class = "header-style-text" })
    @Html.ActionLink("Обратная связь", "Index", "Feedbacks", new { id = Model.ID_User }, new { @class = "header-style-text" })
</div>
