@model IEnumerable<BeatLab.Music>

@{
    ViewBag.Title = "Биты|ADMIN";

}



<h2>Биты</h2>
<br />
<p>
    @Html.ActionLink("Добавить новый трек", "Create")
</p>
@using (Html.BeginForm(Html.BeginForm("Filter", "Musics", FormMethod.Post, new { enctype = "multipart/form-data" })))
{
    @Html.TextBox("Name");
    @Html.DropDownList("ID_Genere_of_Music")
    @Html.DropDownList("ID_User")
    @Html.DropDownList("ID_Type_mysic")
    <input type="submit" name="Искать">
    <div>
        Сортировать по
        <input type="submit" value="Алфавиту" name="Алфавиту">
        <input type="submit" value="Рейтингу" name="Рейтингу">
        <input type="submit" value="Цене" name="Цене">
    </div>

}
<div style="display:flex; flex-wrap: wrap;">
    @if (Model.Count() == 0)
    {
        @("Ничего не найдено. Введите другое условие запроса");
    }
    else
    {
        foreach (var item in Model)
        {
            <div style="grid-template-rows: 70% 30%; margin: 2em;">
                <div style="position:relative;">
                    @{ if (item.Image_music == null)
                        {
                            <img id='previewImage' style='width:150px; height:150px;' src="~/Resource/user.png" />
                        }
                        else
                        {
                            @Html.Raw("<img id='previewImage' style='width:150px; height:150px;' src=\"data:image/jpeg;base64,"
                                                                 + Convert.ToBase64String(item.Image_music) + "\" />")
                            @Html.ValidationMessageFor(modelItem => item.Image_music, "", new { @class = "text-danger" })
                        }
                    }
                    <audio controls
                           controlsList="nodownload"
                           oncontextmenu="return false;"
                           style="position: absolute; margin-left:-200px; z-index:1;"
                           muted
                           id="player">
                        <source src="@Url.Action("LoadAudio", "Musics", new { musicId = item.ID_Music })" type="audio/mp3" />
                    </audio>
                </div>
                <div style="background-color: lightgray; width: 150px; height:60px; text-align:center;">
                    <div>
                        @Html.ActionLink(item.Name_music, "Details", new { id = item.ID_Music }, new { style = "color: black;" })
                    </div>
                    <div>
                        @Html.ActionLink(@"от " + item.User.Nickname_User, "Details", new { id = item.ID_Music }, new { style = "color: black;" })
                    </div>
                </div>
            </div>
        }
    }
</div>
<section id="container-id" class="playerm" hidden>
    <div class="common-container">
        <div class="player__container">

            <div class="player__track-descr-box">

                <div class="track-descr">
                    <img class="track-descr__cover-img" src="https://beatmaker.tv/Default/General/Image/198874?type=BeatImageSmall" alt="Lilia | Живая гитара cover" />

                    <div class="track-descr__content">

                        <a class="track-artist__name" href="/beatmaker/176887">GREEDI</a>
                        <span style="font-size:14px"> — </span>
                        <a class="track-descr__name" href="/beatmaker/176887">GREEDI</a>
                        <p class="track-descr__style">
                            Рок
                        </p>
                    </div>

                </div>
            </div>

            <div class="player__controls-box">

            </div>


            <div class="player__tools-box">
                <div class="player__add-btn-box">

                    <button class="bg" tabindex="0">
                        <span class="text">
                            Купить
                        </span>
                        <span class="btn-icon icon-cart">

                        </span>
                    </button>

                </div>
            </div>
        </div>
    </div>
</section>
<script>
    for (const player of Array.from(document.querySelectorAll('audio'))) {
        player.addEventListener('play', onPlayListener);
    }

    function onPlayListener(event) {
        console.log(event);
        document.querySelector('.track-artist__name').innerHTML = event.target.parentElement.parentElement.children[1].firstChild.textContent.trim();
        document.querySelector('.track-descr__cover-img').src = event.target.parentElement.querySelector('img').src;
        event.preventDefault();
        event.target.pause();
        document.getElementById('container-id').hidden = false;
        const audio = event.target;
        const audioClone = audio.cloneNode(true);
        audioClone.muted = false;
        audioClone.removeEventListener('play', onPlayListener);
        audioClone.play();
        const audioContainer = document.querySelector('.player__controls-box');
        audioContainer.removeChild(audioContainer.firstChild);
        audioContainer.appendChild(audioClone);
    }
</script>
