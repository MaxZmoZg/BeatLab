@model IEnumerable<BeatLab.Music>

@{
    ViewBag.Title = "Биты|ADMIN";

}



<h2>Биты</h2>
<br />
<p>
    @Html.ActionLink("Добавить новый трек", "Create")
</p>
<table class="table">
    <tr>
        <th>
            Название
        </th>
        <th>
            Описание
        </th>
        <th>
            Цена
        </th>
        <th>
            Фото
        </th>
        <th>
            Альбом
        </th>
        <th>
            Жанр
        </th>
        <th>
            Тип файла
        </th>
        <th>
            Никнейм
        </th>
        <th>
            Музыкальный файл
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name_music)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description_Music)
            </td>
            <td>
                @if (item.Price_Music.LastOrDefault() is Price_Music price_Music)
                {
                    @(price_Music.Price.ToString("F2") + " руб.");
                }
                else
                {
                    @("Цена не указана");
                }
            </td>
            <td>
                @{ if (item.Image_music == null)
                    {
                        <img id='previewImage' style='width:60px; height:50px;' src="~/Resource/user.png" />
                    }
                    else
                    {
                        @Html.Raw("<img id='previewImage' style='width:60px; height:50px;' src=\"data:image/jpeg;base64,"
                                                + Convert.ToBase64String(item.Image_music) + "\" />")
                        @Html.ValidationMessageFor(modelItem => item.Image_music, "", new { @class = "text-danger" })
                    }
                }
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Alboms.Name_Album)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Genere_Of_Music.Name_Gener_of_music)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Type_Music.Name_Type_Music)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.User.Nickname_User)
            </td>
            <td>
                <audio controls
                       controlsList="nodownload"
                       oncontextmenu="return false;"
                       muted
                       id="player">

                    <source src="@Url.Action("LoadAudio", "Musics", new { musicId = item.ID_Music })" type="audio/mp3" />

                </audio>

            </td>



            <td>
                @Html.ActionLink("Редактировать", "Edit", new { id = item.ID_Music }) |
                @Html.ActionLink("Детали", "Details", new { id = item.ID_Music }) |
                @Html.ActionLink("Удалить", "Delete", new { id = item.ID_Music })
            </td>
        </tr>



    }

</table>



<section id="container-id" class="playerm" hidden>
    <div class="common-container">
        <div class="player__container">

            <div class="player__track-descr-box">

                <div class="track-descr">
                    <img class="track-descr__cover-img" src="https://beatmaker.tv/Default/General/Image/198874?type=BeatImageSmall" alt="Lilia | Живая гитара cover" />

                    <div class="track-descr__content">

                        <a class="track-artist__name" href="/beatmaker/176887">GREEDI</a>
                        <span style="font-size:14px"> — </span>
                        <a class="track-descr__name" href="/beatmaker/176887">GREEDI</a>
                        <p class="track-descr__style">
                            Рок
                        </p>
                    </div>

                </div>
            </div>

            <div class="player__controls-box">

            </div>


            <div class="player__tools-box">
                <div class="player__add-btn-box">

                    <button class="bg" tabindex="0">
                        <span class="text">
                            Купить
                        </span>
                        <span class="btn-icon icon-cart">

                        </span>
                    </button>

                </div>
            </div>
        </div>
    </div>
</section>
<script>
    for (const player of Array.from(document.querySelectorAll('td > audio'))) {
        player.addEventListener('play', onPlayListener);
    }

    function onPlayListener(event) {
        document.querySelector('.track-descr__name').innerHTML = event.target.parentElement.parentElement.querySelector('td').textContent.trim();
        document.querySelector('.track-artist__name').innerHTML = event.target.parentElement.parentElement.querySelector('body > div.container.body-content > table > tbody > tr > td:nth-child(8)').textContent.trim();
        document.querySelector('.track-descr__style').innerHTML = event.target.parentElement.parentElement.querySelector('body > div.container.body-content > table > tbody > tr > td:nth-child(6)').textContent.trim();
        document.querySelector('.track-descr__cover-img').src = event.target.parentElement.parentElement.querySelector('img').src;
        event.preventDefault();
        event.target.pause();
        document.getElementById('container-id').hidden = false;
        const audio = event.target;
        const audioClone = audio.cloneNode(true);
        audioClone.muted = false;
        audioClone.removeEventListener('play', onPlayListener);
        audioClone.play();
        const audioContainer = document.querySelector('.player__controls-box');
        audioContainer.removeChild(audioContainer.firstChild);
        audioContainer.appendChild(audioClone);
    }
</script>
